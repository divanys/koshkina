Задание 2.
Создайте структуру классов, которые могли бы использоваться в работе театра.
В театре должны храниться списки сотрудников, информация о билетах на сеансы и т.д.
В этой структуре должны присутствовать главный класс Main, который запускал бы всё действие.
Подумайте, как наилучшим образом организовать взаимодействие классов и интерфейсов.
Используйте все изученные технологии: инкапсуляцию, наследование, абстрактные классы, интерфейсы, final, static,
полиморфизм (перегрузка и переопределение методов), конструкторы и инициализаторы.
Ваш проект должен содержать не менее 10 классов/интерфейсов.
Составьте так же файл с описанием вашего проекта и системы классов.

Театр:
    Человеки:
        1) зрители
            1. фамилия
            2. имя
            3. отчество
            4. возраст

        2) работники:
            а. выступающие
                1. фамилия
                2. имя
                3. название представления
            б. контролёры
                1. фамилия
                2. имя
            в. котики
                1. усы
                2. хвост

    Билет:
        1) тип сеанса (будни/выходные/праздники)
        2) название представления
        3) фамилия
        4) имя
        5) отчество
        6) возраст (для определения детский/взрослый сеанс)
        7) стоимость
        8) скидка
        9) дата
        10) время
        11) род представления


Методы:
    1) вывод самого билетика для конкретного пользователя - сделано
    2) регистрация билетика - сделано
    3) ремув билетика - сделано

    4) вывод списка выступающих - сделано
    5) регистрация выступающего - сделано

    6) вывод списка сеансов - сделано
    7) регистрация сеанса (название, дата, время) - сделано

Класс Ticket
    Свойства класса:

    numberTicket - номер билета.
    sessionType - тип сеанса (например, будний день, выходной и т. д.).
    basePrice - базовая цена билета.
    price - рассчитанная цена билета.
    typeOfSeat - тип места в зале.
    numberOfRow - номер ряда.
    numberOfSeat - номер места.
    lastName, middleName, firstName - фамилия, отчество и имя зрителя, на чье имя зарегистрирован билет.
    ageRestriction - возрастное ограничение представления, которое указывает на минимальный возраст посетителя.
    showName - название представления, на которое зарегистрирован билет.
    date - дата представления.
    time - время представления.
    isReg - флаг, указывающий, зарегистрирован ли билет.
    Методы класса:

    regTicket(int numberTicket, Spectator spectator, Performance performance) - регистрирует билет на представление для конкретного зрителя. При этом проверяется соответствие возраста посетителя возрастному ограничению представления. Если билет успешно зарегистрирован, он выводит информацию о билете и устанавливает флаг isReg в true.
    printTicket() - выводит информацию о билете, включая номер билета, название представления, дату, время, фамилию, имя, отчество зрителя, возрастное ограничение, тип места, номер ряда, номер места, базовую цену билета, скидку и итоговую цену.
    removeTicket() - позволяет удалить билет из регистрации. Если билет был успешно удален, устанавливает флаг isReg в false.
    calculateTicketPrice(SessionType sessionType, int age, double basePrice) - рассчитывает цену билета с учетом типа сеанса, возраста посетителя и базовой цены.
    Класс Ticket позволяет регистрировать, выводить информацию о билетах и удалять их из регистрации. Также он рассчитывает цену билета в зависимости от различных факторов.


Класс Theatre
    Этот класс, Theatre, представляет театр и управляет списками артистов (performers), билетов (tickets) и представлений (performances). В нем определены следующие основные методы:

    addPerformer(Performer performer) - добавляет артиста в театр. Перед добавлением проверяет, не был ли артист уже зарегистрирован. Если артист успешно добавлен, выводит информацию о нем.

    addTicket(Ticket ticket) - добавляет билет в театр. Перед добавлением проверяет, не был ли билет с таким номером уже зарегистрирован, и является ли билет действительным. Если билет успешно добавлен, выводит информацию о нем.

    addPerformance(Performance performance) - добавляет представление в театр. Перед добавлением проверяет, не было ли представление с таким названием уже зарегистрировано. Если представление успешно добавлено, выводит информацию о нем.

    printListAllTickets() - выводит информацию о всех зарегистрированных билетах.

    printListAllPerformances() - выводит информацию о всех зарегистрированных представлениях.

    printListAllPerformers() - выводит информацию о всех зарегистрированных артистах.

    Класс Theatre предоставляет функционал для добавления и вывода информации о билетах, представлениях и артистах в театре.

Класс Controller
    Класс Controller представляет контролера в театре. Он реализует интерфейс Employee и наследует класс Person. В этом классе определены следующие методы:

    public Controller(String lastName, String firstName, String middleName, int age, String performanceName) - конструктор класса. Принимает параметры: фамилия (lastName), имя (firstName), отчество (middleName), возраст (age) и название представления (performanceName). Вызывает конструктор суперкласса Person.

    public void setPerformanceName(String performanceName) - устанавливает название представления.

    public void findSeat(int numberOfRow, int numberOfSeat) - выводит сообщение о помощи в поиске места в указанном ряду и на указанном месте.

    public void findRow(int numberOfRow) - выводит сообщение о помощи в поиске указанного ряда.

    public void assistWithTicket(Ticket ticket) - выводит сообщение о помощи с билетом на указанное представление.

    public void providePerformanceInfo(Performance performance) - выводит информацию о представлении: название, тип и возрастное ограничение.

    public void checkTicket(Ticket ticket) - проверяет, зарегистрирован ли указанный билет. Если зарегистрирован, выводит "Билет действителен.", иначе "Билет не зарегистрирован."

    @Override public String getPerformanceName() - возвращает название представления.

    Класс Controller представляет контролера, который оказывает помощь зрителям в поиске мест, предоставляет информацию о представлении и проверяет действительность билета.

Класс Performer
    Класс Performer представляет артиста в театре. Он реализует интерфейс Employee и наследует класс Person. В этом классе определены следующие методы:

    public Performer(String lastName, String firstName, String middleName, int age, String performanceName) - конструктор класса. Принимает параметры: фамилия (lastName), имя (firstName), отчество (middleName), возраст (age) и название представления (performanceName). Вызывает конструктор суперкласса Person.

    public void setPerformanceName(String performanceName) - устанавливает название представления, на котором выступает артист.

    public String getPerformanceName() - возвращает название представления, на котором выступает артист.

    public Performance getPerformance() - возвращает объект представления, на котором выступает артист.

    public void setPerformance(Performance performance) - устанавливает представление, на котором выступает артист.

    public void registerForPerformance(Performance performance) - регистрирует артиста на указанном представлении. Если представление не пустое, артист регистрируется и выводится сообщение о регистрации. В противном случае выводится сообщение об ошибке.

    public void unregisterFromPerformance() - снимает артиста с представления. Если артист был зарегистрирован на представлении, то он снимается и выводится сообщение об удалении. В противном случае выводится сообщение о том, что артист не был зарегистрирован.

    public void printPerformer() - выводит информацию о выступающем артисте и представлении, на котором он выступает. Если артист зарегистрирован, то выводится сообщение о выступлении. В противном случае выводится сообщение о том, что артист не зарегистрирован.